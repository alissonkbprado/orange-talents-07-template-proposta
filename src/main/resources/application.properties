# datasource MySql
spring.datasource.url=${DATASOURCE_URL:jdbc:mysql://localhost:3306/propostas?createDatabaseIfNotExist=TRUE&useTimezone=true&serverTimezone=America/Sao_Paulo}
spring.datasource.username=${DATASOURCE_USER:root}
spring.datasource.password=${DATASOURCE_PASSWORD:Zup123456}
#spring.jpa.defer-datasource-initialization=true

# jpa MySql
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
# para controlar o timeout de execução padrão de queries
spring.jpa.properties.javax.persistence.query.timeout=${JPA_QUERY_TIMEOUT:50}
spring.jpa.hibernate.ddl-auto=${HIBERNATE_DLL_AUTO_URL:update}
#spring.jpa.properties.hibernate.show_sql=${HIBERNATE_SHOW_SQL:true}
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.show-sql: true

## spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/propostas}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/propostas/protocol/openid-connect/certs}

# Feign
feign.client.config.nomeFeignClienteDefinidoNoBean.read-timeout=${FEIGN_READ_TIMEOUT:100}
feign.client.config.nomeFeignClienteDefinidoNoBean.connect-timeout=${FEIGN_CONNECT_TIMEOUT:100}

# API ANALISE PROPOSTA
analise.host=${ANALISE_URL:http://localhost:9999}
analise.solicitacao-analise=${ANALISE_SOLICITACAO_URL:/api/solicitacao}

# API CARTOES
cartoes.host=${CARTOES_URL:http://localhost:8888}
cartoes.novo-cartao=${CARTOES_NOVO_CARTAO_URL:/api/cartoes}

# Actuator
management.endpoints.web.exposure.include=${ACTUATOR_EXPOSE_INCLUDE:info,health,metrics,prometheus}
management.endpoints.web.exposure.exclude=${ACTUATOR_EXPOSE_EXCLUDE:env,beans}
management.endpoint.health.show-details=${ACTUATOR_SHOW_DETAILS:always}
info.app.name=@project.name@
info.app.description=@project.description@
info.app.version=@project.version@
info.app.encoding=@project.build.sourceEncoding@
info.app.java.version=@java.version@

# Actuator Prometheus
management.endpoints.prometheus.enabled=${PROMETHEUS_ENABLE:true}
management.metrics.tags.aplicacao=${PROMETHEUS_NOME_DA_APLICACAO:servico de propostas}
management.metrics.tags.ambiente=${PROMETHEUS_AMBIENTE:desenvolvimento}

# Actuator CORS
#management.endpoints.web.cors.allowed-origins=https://example.com
#management.endpoints.web.cors.allowed-methods=GET

# Tarefas Agendadas

# features.cadastra_proposta.service.analise
periodicidade.consultaPropostasAguardandoAprovacao=${PERIODICIDADE_CONSULTA_ANALISE_PROPOSTAS:5000}

# features.cadastra_proposta.service.cartao
periodicidade.geraCartao=${PERIODICIDADE_GERA_CARTAO:5000}